openapi: 3.0.0
info:
  description: NeetoCal offers APIs to manage bookings from external channels. To use the APIs, [you will need an API key.](https://help.neetocal.com/articles/api-keys)
  title: NeetoCal Packages APIs
servers:
  - description: NeetoCal APIs
    url: https://{workspace}.neetocal.com/api/external/v1
    variables:
      workspace:
        default: spinkart
        description: Your workspace's subdomain
tags:
  - name: Packages
    description: APIs to manage packages of the workspace.
paths:
  /packages:
    get:
      summary: List all packages
      tags:
        - Packages
      description: This API allows to list all packages.
      parameters:
        - in: header
          name: X-Api-Key
          description: Bearer token for API access.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/package_list_response'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
  /packages/{package_id}:
    get:
      summary: Get a package
      tags:
        - Packages
      description: This API allows to get a package.
      parameters:
        - in: header
          name: X-Api-Key
          description: Bearer token for API access.
          required: true
          schema:
            type: string
        - in: path
          name: package_id
          description: Id of the package to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  package:
                    $ref: '#/components/schemas/package'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
components:
  schemas:
    package_fee:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the fee configuration.
          example: 1b217cc5-69b5-4fb1-a13c-c22f9c14e7f9
        amount:
          type: string
          description: The fee amount as a string to preserve decimal precision.
          example: '120.0'
        currency:
          type: string
          description: The currency code for the fee amount (e.g., "inr", "usd").
          example: inr
        feeable_id:
          type: string
          description: ID of the entity this fee is associated with (package ID in this case).
          example: aff17ff8-1bf8-4e77-a3c5-2f86104f9a20
        feeable_type:
          type: string
          description: Type of entity this fee is associated with.
          example: Package
        payment_provider:
          type: string
          description: Payment service provider used for processing payments (e.g., "stripe", "cash").
          example: cash
        kind:
          type: string
          description: Type of fee structure (e.g., "fixed", "percentage").
          example: fixed
        min_amount:
          type: string
          description: Minimum amount that can be charged for this fee.
          example: '120.0'
        taxes:
          type: array
          description: Array of tax configurations applied to this fee.
          items:
            type: object
        is_default:
          type: boolean
          description: Indicates whether this is the default fee configuration for the package.
        display_amount:
          type: string
          nullable: true
          description: Custom display amount for the fee (if different from the actual amount).
        is_tax_enabled:
          type: boolean
          description: Whether tax calculation is enabled for this fee.
        is_tip_enabled:
          type: boolean
          description: Whether tipping is enabled for this fee.
        is_tax_applicable_on_tip:
          type: boolean
          description: Whether taxes are calculated on top of tips.
        vpas:
          type: array
          description: Virtual Payment Addresses for UPI payments (India-specific).
          items:
            type: object
        amount_in_smallest_currency_unit:
          type: integer
          description: Fee amount in the smallest currency unit (e.g., paise for INR, cents for USD).
          example: 12000
    package:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the package.
          example: aff17ff8-1bf8-4e77-a3c5-2f86104f9a20
        name:
          type: string
          description: Human-readable name for the package.
          example: Consultation Package
        slug:
          type: string
          description: URL-friendly identifier for the package, used in public URLs and API calls.
          example: consultation-package
        status:
          type: string
          description: Current status of the package (e.g., "enabled", "disabled").
          example: enabled
          enum:
            - enabled
            - disabled
        duration:
          type: integer
          description: Duration of the package in seconds.
          example: 7200
        fee:
          $ref: '#/components/schemas/package_fee'
          description: Fee configuration for the package, including amount, currency, and payment settings.
    pagination:
      type: object
      properties:
        total_records:
          type: integer
          description: Total number of records.
        total_pages:
          type: integer
          description: Total number of pages available.
        current_page_number:
          type: integer
          description: Current page number.
        page_size:
          type: integer
          description: Number of records per page.
    package_list_response:
      type: object
      properties:
        packages:
          type: array
          items:
            $ref: '#/components/schemas/package'
          description: Array of packages available in the workspace, each containing fee configuration and package details.
        pagination:
          $ref: '#/components/schemas/pagination'
          description: Pagination information including total records, pages, and current page details.
