openapi: 3.0.0
info:
  description: NeetoCI offers APIs to trigger CI jobs and manage continuous integration workflows. To use the APIs, you will need an API key.
  title: NeetoCI APIs
servers:
  - description: NeetoCI APIs
    url: https://{workspace}.neetoci.com/api/v1
    variables:
      workspace:
        default: neetozone
        description: Your workspace's subdomain.
tags:
  - name: CI Jobs
    description: APIs to trigger and manage CI jobs in the workspace.
paths:
  /trigger_ci_job:
    post:
      summary: Trigger a CI job
      tags:
        - CI Jobs
      description: This API allows you to trigger a CI job for a specific project and branch with a specified workflow.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the NeetoCI API Keys dashboard.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ci_job_trigger_request'
      responses:
        '200':
          description: OK - CI job triggered successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ci_job_trigger_response'
        '400':
          description: Bad Request - Missing/Invalid parameters.
        '401':
          description: Unauthorized - Invalid API key.
        '500':
          description: Internal server error.
components:
  schemas:
    ci_job_trigger_request:
      type: object
      properties:
        branch_name:
          type: string
          description: The name of the branch to trigger the CI job for
          example: main
          default: main
        project_name:
          type: string
          description: The name of the project to trigger the CI job for
          example: neeto-cal-web
          default: neeto-cal-web
        workflow_name:
          type: string
          description: The name of the workflow to execute
          example: playwright-staging
          default: playwright-staging
      required:
        - branch_name
        - project_name
        - workflow_name
    plan:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the plan
          example: be8e68a3-2f79-4be8-86f1-11dfcfac8040
        capacity:
          type: integer
          description: Capacity limit for the plan
          example: 50
        cpu:
          type: number
          format: float
          description: CPU allocation in cores
          example: 4
        memory:
          type: number
          format: float
          description: Memory allocation in GB
          example: 8
        name:
          type: string
          description: Human-readable name of the plan
          example: Professional 2
        price:
          type: number
          format: float
          description: Price per unit
          example: 4
        slug:
          type: string
          description: URL-friendly identifier for the plan
          example: professional-2
        created_at:
          type: string
          format: date-time
          description: When the plan was created
          example: '2023-08-16T19:14:11.595Z'
        updated_at:
          type: string
          format: date-time
          description: When the plan was last updated
          example: '2023-08-16T19:14:11.595Z'
        ephemeral_storage:
          type: number
          format: float
          description: Ephemeral storage allocation in GB
          example: 80
    workflow:
      type: object
      properties:
        is_cypress:
          type: boolean
          description: Whether the workflow is a Cypress test workflow
          example: true
        name:
          type: string
          description: Name of the workflow
          example: playwright-staging
        plan:
          $ref: '#/components/schemas/plan'
    ci_job:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the CI job
          example: 169bf1ed-cc65-471f-b9f3-4f63f32b9400
        created_at:
          type: string
          format: date-time
          description: When the CI job was created
          example: '2025-08-22T12:54:49.049Z'
        status:
          type: string
          description: Current status of the CI job
          example: pending
        parallelism:
          type: integer
          description: Number of parallel executions for this job
          example: 4
        url:
          type: string
          format: uri
          description: URL to view the CI job in the web interface
          example: https://neetozone.neetoci.com/projects/neeto-record-web/jobs/169bf1ed-cc65-471f-b9f3-4f63f32b9400
        workflow:
          $ref: '#/components/schemas/workflow'
    ci_job_trigger_response:
      type: object
      properties:
        ci_job:
          $ref: '#/components/schemas/ci_job'
