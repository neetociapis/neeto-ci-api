openapi: 3.0.0
info:
  description: NeetoCal offers APIs to manage bookings from external channels. To use the APIs, [you will need an API key.](https://help.neetocal.com/articles/api-keys)
  title: NeetoCal Bookings APIs
servers:
  - description: NeetoCal APIs
    url: https://{workspace}.neetocal.com/api/external/v1
    variables:
      workspace:
        default: spinkart
        description: Your workspace's subdomain
tags:
  - name: Bookings
    description: APIs to create, list, reschedule, and cancel bookings.
paths:
  /bookings:
    post:
      summary: Make a booking
      tags:
        - Bookings
      description: This API allows to make a booking for a specific scheduling link, either in a particular slot or in the first available slot. To book the first available slot, remove `slot_date` and `slot_start_time` from the request body.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meeting_slug:
                  type: string
                  description: Slug of scheduling link you want to book.
                  example: meeting-with-oliver-smith
                name:
                  type: string
                  description: Name of person making the booking.
                  example: Eve Smith
                email:
                  type: string
                  description: Email of person making the booking.
                  example: eve@example.com
                slot_date:
                  type: string
                  description: Date on which you want to book. This should be in "YYYY-MM-DD" format. If `slot_date` and `slot_start_time` are not provided then the first available slot will be booked.
                  example: '2025-07-15'
                slot_start_time:
                  type: string
                  description: Start time for the booking. This should be in "HH:MM AM/PM" format.
                  example: 01:30 PM
                time_zone:
                  type: string
                  description: Time zone of person making the booking.
                  example: Asia/Kolkata
                preferred_meeting_spot:
                  type: string
                  description: |
                    Your preferred meeting spot. This field is optional. Before passing this value, ensure that the corresponding meeting spot is configured in the "Where" section of the scheduling link.
                  example: jitsi
                  enum:
                    - custom
                    - jitsi
                    - in_person
                    - daily
                    - zoom
                    - whereby
                    - google_meet
                    - teams
                  default: jitsi
                form_responses:
                  type: object
                  description: Responses for the questions of booking form (optional). The key of the field should be the field code of the question. The field code can be found in scheduling link's Settings -> Questions -> 3 dot menu of the question -> Edit -> Advanced properties. You can specify guest emails using the `guest_email_s` field code.
                  properties:
                    guest_email_s:
                      type: array
                      description: Array of guest emails for the booking. The default field code is "guest_email_s". You can change this by editing the Guest email(s) question, and changing the field code in advanced properties.
                      items:
                        type: string
                  example:
                    guest_email_s:
                      - sam@example.com
                      - charlie@example.com
                    language: English
              required:
                - meeting_slug
                - name
                - email
                - time_zone
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
    get:
      summary: List all bookings
      tags:
        - Bookings
      description: This API allows to get a list of bookings in a workspace. The bookings can be filtered based on client email, host email, type of meeting, meeting start time or meeting end time.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: To get the bookings of a particular type only. The available types are upcoming, past, cancelled, and incomplete. If no value is passed it will default to all bookings.
          required: false
          schema:
            type: string
        - in: query
          name: page_number
          description: Page number. The default value is 1.
          required: false
          schema:
            type: number
        - in: query
          name: page_size
          description: Number of bookings to receive. The default value is 30.
          required: false
          schema:
            type: number
        - in: query
          name: host_email
          description: To get the bookings of a particular host only.
          required: false
          schema:
            type: string
        - in: query
          name: client_email
          description: To get the bookings of a particular client only.
          required: false
          schema:
            type: string
        - in: query
          name: filters
          description: Apply filters on your bookings.
          required: false
          schema:
            type: object
            properties:
              starts_at:
                type: object
                description: |
                  To filter bookings by meeting start time, use deep object style in the query string, e.g.:
                  `?filters[starts_at][rule]=after&filters[starts_at][value]=2027-12-19T06:00:00.000Z`
                  - Supported rules: at, after, before, between
                  - Value: a single UTC datetime string for at/after/before, or two comma-separated UTC datetime strings for between.
                properties:
                  rule:
                    type: string
                    enum:
                      - at
                      - after
                      - before
                      - between
                    description: The rule to be used for comparing with the starts_at value
                  value:
                    type: string
              ends_at:
                type: object
                description: |
                  To filter bookings by meeting end time, use deep object style in the query string, e.g.:
                  `?filters[ends_at][rule]=before&filters[ends_at][value]=2027-12-19T10:00:00.000Z`
                  - Supported rules: at, after, before, between
                  - Value: a single UTC datetime string for at/after/before, or two comma-separated UTC datetime strings for between.
                properties:
                  rule:
                    type: string
                    enum:
                      - at
                      - after
                      - before
                      - between
                    description: The rule to be used for comparing with the ends_at value
                  value:
                    type: string
        - in: query
          name: sorting_order
          description: Sort bookings by booking creation date. The default value is `desc`.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking_list_response'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
  /bookings/{booking_sid}:
    patch:
      summary: Reschedule a booking
      tags:
        - Bookings
      description: This API allows to reschedule the booking to a different slot.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: booking_sid
          description: Id of booking that you want to reschedule.
          required: true
          schema:
            type: string
            example: hda6gxy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of person making the booking.
                  example: Eve Smith
                email:
                  type: string
                  description: Email of person making the booking.
                  example: eve@example.com
                slot_date:
                  type: string
                  description: Date on which the booking is to be rescheduled. This should be in "YYYY-MM-DD" format.
                  example: '2025-07-25'
                slot_start_time:
                  type: string
                  description: Start time for the booking. This should be in "HH:MM AM/PM" format.
                  example: 10:30 AM
                time_zone:
                  type: string
                  description: Time zone of person rescheduling the booking.
                  example: Asia/Kolkata
                form_responses:
                  type: object
                  description: Responses for the questions of booking form (optional). The key of the field should be the field code of the question. The field code can be found in scheduling link's Settings -> Questions -> 3 dot menu of the question -> Edit -> Advanced properties. You can specify guest emails using the `guest_email_s` field code.
                  properties:
                    guest_email_s:
                      type: array
                      description: Array of guest emails for the booking. The default field code is "guest_email_s". You can change this by editing the Guest email(s) question, and changing the field code in advanced properties.
                      items:
                        type: string
                  example:
                    guest_email_s:
                      - sam@example.com
                      - charlie@example.com
                    language: English
                reschedule_reason:
                  type: string
                  description: Reason for rescheduling the booking (optional).
                  example: I want to change the booking time
              required:
                - name
                - email
                - slot_date
                - slot_start_time
                - time_zone
      responses:
        '200':
          description: OK - Booking reschedule successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/booking'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
  /bookings/{booking_sid}/cancel:
    post:
      summary: Cancel a booking
      tags:
        - Bookings
      description: This API allows to cancel a booking.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: booking_sid
          description: Id of the booking that you want to cancel.
          required: true
          schema:
            type: string
            example: hda6gxy
        - in: query
          name: cancel_reason
          description: Reason for cancelling the booking.
          example: I am not available
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Booking cancel successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
components:
  schemas:
    booking:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the booking.
        sid:
          type: string
          description: Short identifier (SID) for the booking, used in URLs and API calls.
        parent_booking_id:
          type: string
          nullable: true
          description: Reference to the parent booking if this is a group booking.
        email:
          type: string
          description: Email address of the person who made the booking.
        name:
          type: string
          description: Name of the person who made the booking.
        host_name:
          type: string
          description: Name of the primary host for the meeting.
        host_email:
          type: string
          description: Email address of the primary host for the meeting.
        is_multihost:
          type: boolean
          description: Whether the meeting has multiple hosts.
        multihosts:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the host.
              email:
                type: string
                description: Email address of the host.
          description: List of all hosts for the meeting when is_multihost is true.
        starts_at:
          type: string
          format: date-time
          description: Start time of the booking in UTC.
        ends_at:
          type: string
          format: date-time
          description: End time of the booking in UTC.
        time_zone:
          type: string
          description: Time zone of the booking location.
        starts_at_for_client:
          type: string
          description: Start time of the booking in the client's local time zone.
        ends_at_for_client:
          type: string
          description: End time of the booking in the client's local time zone.
        status:
          type: string
          description: Current status of the booking (e.g., confirmed, cancelled, awaiting_approval, rejected).
        cancel_reason:
          type: string
          nullable: true
          description: Reason provided when the booking was cancelled.
        cancelled_by:
          type: string
          nullable: true
          description: Name of the person who cancelled the booking.
        reschedule_requested:
          type: boolean
          description: Whether a reschedule has been requested for this booking.
        preferred_meeting_spot:
          type: string
          description: Preferred meeting platform or location type selected by the client.
        room_type:
          type: string
          nullable: true
          description: Type of meeting room or platform being used.
        room_url:
          type: string
          nullable: true
          description: URL for the meeting room or platform.
        room_id:
          type: string
          nullable: true
          description: Unique identifier for the meeting room or platform.
        spot_details:
          type: string
          nullable: true
          description: Additional details about the meeting location or platform.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the booking was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the booking was last updated.
        meeting_id:
          type: string
          description: Unique identifier of the scheduling link this booking belongs to.
        meeting:
          type: object
          properties:
            name:
              type: string
              description: Name of the meeting/scheduling link.
          description: Basic information about the associated meeting.
        no_show:
          type: boolean
          description: Whether the booking is marked as no-show by the host.
        meeting_outcome:
          type: string
          nullable: true
          description: Outcome status of the meeting.
        notes_url:
          type: string
          nullable: true
          description: URL to access notes or additional information about the booking.
        internal_notes:
          type: string
          nullable: true
          description: Internal notes about the booking visible only to hosts and admins.
        metadata:
          type: object
          nullable: true
          description: Additional custom data associated with the booking.
        admin_booking_url:
          type: string
          description: URL for hosts and admins to view and manage the booking.
        client_booking_url:
          type: string
          description: URL for clients to view their booking details.
        form_responses:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Display name of the form field.
              value:
                type: string
                description: Value submitted for the form field.
              type:
                type: string
                description: Type of the form field (e.g., name, email, additional_guests).
              field_code:
                type: string
                description: Internal code identifier for the form field.
          description: Responses submitted through the booking form.
    pagination:
      type: object
      properties:
        total_records:
          type: integer
          description: Total number of records.
        total_pages:
          type: integer
          description: Total number of pages available.
        current_page_number:
          type: integer
          description: Current page number.
        page_size:
          type: integer
          description: Number of records per page.
    booking_list_response:
      allOf:
        - type: object
          properties:
            bookings:
              type: array
              items:
                $ref: '#/components/schemas/booking'
              description: List of bookings.
            pagination:
              $ref: '#/components/schemas/pagination'
