openapi: 3.0.0
servers:
  - description: NeetoCal APIs
    url: https://{workspace}.neetocal.com/api/external/v1
    variables:
      workspace:
        default: spinkart
        description: Your workspace's subdomain

info:
  description: NeetoCal offers APIs to manage bookings from external channels. To use the APIs, [you will need an API key.](https://help.neetocal.com/articles/api-keys)
  title: NeetoCal Availabilities APIs

tags:
  - name: Availabilities
    description: APIs to manage availabilities of meeting hosts.

paths:
  /availabilities/{availability_id}:
    patch:
      summary: Update an availability
      tags:
        - Availabilities
      description: This API allows to update an availability. You can also set an availability override for specific days.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: availability_id
          description: Id of the availability can be retrieved by going to the particular availability page, and copying it from the URL.
          required: true
          schema:
            type: string
          example: 5ybe3cq
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                periods:
                  type: array
                  items:
                    type: object
                    properties:
                      wday:
                        type: string
                        description: The weekday (e.g., "monday", "tuesday", etc.).
                      start_time:
                        type: string
                        description: Start time in "HH:MM AM/PM" format.
                      end_time:
                        type: string
                        description: End time in "HH:MM AM/PM" format.
                  example:
                    - wday: "monday"
                      start_time: "09:00 AM"
                      end_time: "05:00 PM"
                    - wday: "tuesday"
                      start_time: "11:00 AM"
                      end_time: "04:00 PM"
                overrides:
                  type: array
                  description: Set an override for specific days. To set a date as unavailable, pass a blank array to the periods property. You can remove existing overrides by omitting the periods property.
                  items:
                    type: object
                    properties:
                      date:
                        type: string
                        description: The date (e.g, "2025-03-07")
                      periods:
                        type: array
                        description: Set as blank ( [] ) to set a date as unavailable.
                        items:
                          type: object
                          properties:
                            wday:
                              type: string
                              description: The weekday (e.g., "monday", "tuesday", etc.).
                            start_time:
                              type: string
                              description: Start time in "HH:MM AM/PM" format.
                            end_time:
                              type: string
                              description: End time in "HH:MM AM/PM" format.
                  example:
                    - date: "2025-03-07"
                      periods:
                        - wday: "tuesday"
                          start_time: "11:00 AM"
                          end_time: "04:00 PM"

              required:
                - periods
      responses:
        '200':
          description: OK - Availability updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  availability:
                    $ref: '../schemas/availability.yaml#/components/schemas/availability'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
    get:
      summary: Get availability details
      tags:
        - Availabilities
      description: This API allows to get details about an availability.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: availability_id
          description: Id of the availability can be retrieved by going to the particular availability page, and copying it from the URL.
          required: true
          schema:
            type: string
          example: 5ybe3cq
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  availability:
                    $ref: '../schemas/availability.yaml#/components/schemas/availability'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /availabilities/team_member:
    get:
      summary: List all availabilities of a team member
      tags:
        - Availabilities
      description: This API allows to list availabilities of a team member in the workspace.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: query
          name: email
          description: Email of the team member whose availabilities should be listed.
          required: true
          schema:
            type: string
            example: "oliver@example.com"
        - in: query
          name: page
          description: Page number.
          required: false
          schema:
            type: string
        - in: query
          name: page_size
          description: Number of availabilities to receive. The default value is 30.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: '../schemas/availability.yaml#/components/schemas/availability_list_response'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /availabilities:
    get:
      summary: List all availabilities of the team members
      tags:
        - Availabilities
      description: >
        This API allows to list all the availabilities of specified team members by passing their emails as query parameters.

      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: query
          name: emails[]
          description: >
            Email addresses of team members whose availabilities should be listed.
            You can add multiple email addresses to get availabilities for multiple team members.
            The API playground allows you to easily add multiple emails by clicking the "+" button.
          required: true
          schema:
            type: array
            items:
              type: string
              format: email
            example: ["oliver@example.com", "cypress@example.com", "john@example.com"]
          style: form
          explode: true
        - in: query
          name: page
          description: Page number.
          required: false
          schema:
            type: string
        - in: query
          name: page_size
          description: Number of availabilities to receive. The default value is 30.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: '../schemas/availability.yaml#/components/schemas/availability_list_response'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error

  /meetings/{meeting_sid}/availability:
    post:
      summary: Update the availability for a scheduling link
      tags:
        - Availabilities
      description: This API allows to update the availability used in a scheduling link.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: meeting_sid
          description: The unique SID of the scheduling link you want to fetch.
            You can get `sid` in different ways. Visit the scheduling link page and then click
            on "Settings" > "Show SID". That will give you `sid`.
            The other way you can get `sid` is by listing scheduling links using our `List all scheduling links` API.
            Here you will see `sid` for each scheduling link.
          required: true
          schema:
            type: string
          example: a8yjkzb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                periods:
                  type: array
                  items:
                    type: object
                    properties:
                      wday:
                        type: string
                        description: The weekday (e.g., "monday", "tuesday", etc.).
                      start_time:
                        type: string
                        description: Start time in "HH:MM AM/PM" format.
                      end_time:
                        type: string
                        description: End time in "HH:MM AM/PM" format.
                  example:
                    - wday: monday
                      start_time: 09:00 AM
                      end_time: 05:00 PM
                    - wday: tuesday
                      start_time: 11:00 AM
                      end_time: 04:00 PM
              required:
                - periods
      responses:
        '200':
          description: OK - Meeting updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  meeting:
                    $ref: '../schemas/meeting.yaml#/components/schemas/meeting'
        '400':
          description: Bad Request - Missing/Invalid parameters
        '401':
          description: Unauthorized - Invalid API key
        '500':
          description: Internal server error
