openapi: 3.0.0
servers:
  - description: NeetoCal APIs
    url: https://{workspace}.neetocal.com/api/external/v1
    variables:
      workspace:
        default: spinkart
        description: Your workspace's subdomain

info:
  description: NeetoCal offers APIs to manage bookings from external channels. To use the APIs, [you will need an API key.](https://help.neetocal.com/articles/api-keys)
  title: NeetoCal Bookings APIs

tags:
  - name: Bookings
    description: APIs to create, list, reschedule, and cancel bookings.

paths:
  /bookings:
    post:
      summary: Make a booking
      tags:
        - Bookings
      description: This API allows to make a booking for a specific scheduling link, either in a particular slot or in the first available slot. To book the first available slot, remove `slot_date` and `slot_start_time` from the request body.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meeting_slug:
                  type: string
                  description: Slug of scheduling link you want to book.
                  example: "meeting-with-oliver-smith"
                name:
                  type: string
                  description: Name of person making the booking.
                  example: "Eve Smith"
                email:
                  type: string
                  description: Email of person making the booking.
                  example: "eve@example.com"
                slot_date:
                  type: string
                  description: Date on which you want to book. This should be in "YYYY-MM-DD" format. If `slot_date` and `slot_start_time` are not provided then the first available slot will be booked.
                  example: "2025-07-15"
                slot_start_time:
                  type: string
                  description: Start time for the booking. This should be in "HH:MM AM/PM" format.
                  example: "01:30 PM"
                time_zone:
                  type: string
                  description: Time zone of person making the booking.
                  example: "Asia/Kolkata"
                preferred_meeting_spot:
                  type: string
                  description: >
                    Your preferred meeting spot. This field is optional.
                    Before passing this value, ensure that the corresponding meeting spot is configured
                    in the "Where" section of the scheduling link.
                  example: "jitsi"
                  enum:
                    - custom
                    - jitsi
                    - in_person
                    - daily
                    - zoom
                    - whereby
                    - google_meet
                    - teams
                  default: jitsi
                form_responses:
                  type: object
                  description: Responses for the questions of booking form (optional). The key of the field should be the field code of the question. The field code can be found in scheduling link's Settings -> Questions -> 3 dot menu of the question -> Edit -> Advanced properties. You can specify guest emails using the `guest_email_s` field code.
                  properties:
                    guest_email_s:
                      type: array
                      description: Array of guest emails for the booking. The default field code is "guest_email_s". You can change this by editing the Guest email(s) question, and changing the field code in advanced properties.
                      items:
                        type: string
                  example:
                    {
                      "guest_email_s":
                        ["sam@example.com", "charlie@example.com"],
                      "language": "English",
                    }
              required:
                - meeting_slug
                - name
                - email
                - time_zone
      responses:
        "200":
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: "../schemas/booking.yaml#/components/schemas/booking"
        "400":
          description: Bad Request - Missing/Invalid parameters
        "401":
          description: Unauthorized - Invalid API key
        "500":
          description: Internal server error
    get:
      summary: List all bookings
      tags:
        - Bookings
      description: This API allows to get a list of bookings in a workspace. The bookings can be filtered based on client email, host email, type of meeting, meeting start time or meeting end time.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: To get the bookings of a particular type only. The available types are upcoming, past, cancelled, and incomplete. If no value is passed it will default to all bookings.
          required: false
          schema:
            type: string
        - in: query
          name: page_number
          description: Page number. The default value is 1.
          required: false
          schema:
            type: number
        - in: query
          name: page_size
          description: Number of bookings to receive. The default value is 30.
          required: false
          schema:
            type: number
        - in: query
          name: host_email
          description: To get the bookings of a particular host only.
          required: false
          schema:
            type: string
        - in: query
          name: client_email
          description: To get the bookings of a particular client only.
          required: false
          schema:
            type: string
        - in: query
          name: filters
          description: Apply filters on your bookings.
          required: false
          schema:
            type: object
            properties:
              starts_at:
                type: object
                description: |
                  To filter bookings by meeting start time, use deep object style in the query string, e.g.:
                  `?filters[starts_at][rule]=after&filters[starts_at][value]=2027-12-19T06:00:00.000Z`
                  - Supported rules: at, after, before, between
                  - Value: a single UTC datetime string for at/after/before, or two comma-separated UTC datetime strings for between.
                properties:
                  rule:
                    type: string
                    enum:
                      - at
                      - after
                      - before
                      - between
                    description: The rule to be used for comparing with the starts_at value
                  value:
                    type: string
              ends_at:
                type: object
                description: |
                  To filter bookings by meeting end time, use deep object style in the query string, e.g.:
                  `?filters[ends_at][rule]=before&filters[ends_at][value]=2027-12-19T10:00:00.000Z`
                  - Supported rules: at, after, before, between
                  - Value: a single UTC datetime string for at/after/before, or two comma-separated UTC datetime strings for between.
                properties:
                  rule:
                    type: string
                    enum:
                      - at
                      - after
                      - before
                      - between
                    description: The rule to be used for comparing with the ends_at value
                  value:
                    type: string
        - in: query
          name: sorting_order
          description: Sort bookings by booking creation date. The default value is `desc`.
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        "200":
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: "../schemas/booking.yaml#/components/schemas/booking_list_response"
        "400":
          description: Bad Request - Missing/Invalid parameters
        "401":
          description: Unauthorized - Invalid API key
        "500":
          description: Internal server error

  /bookings/{booking_sid}:
    get:
      summary: Get booking details
      tags:
        - Bookings
      description: This API allows to retrieve detailed information about a specific booking using its SID.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: booking_sid
          description: SID of the booking you want to retrieve.
          required: true
          schema:
            type: string
            example: "8sqtzrs"
      responses:
        "200":
          description: OK - Request succeeded
          content:
            application/json:
              schema:
                $ref: "../schemas/booking.yaml#/components/schemas/booking"
              example:
                id: "efb296a3-8205-419f-8ac4-1abfc46bc3c7"
                sid: "8sqtzrs"
                parent_booking_id: null
                name: "John Doe"
                email: "john.doe@example.com"
                host_name: "Jane Smith"
                host_email: "jane@bigbinary.com"
                is_multihost: false
                multihosts:
                  - name: "Jane Smith"
                    email: "jane@bigbinary.com"
                starts_at: "2025-07-23T05:00:00.000Z"
                ends_at: "2025-07-23T05:15:00.000Z"
                time_zone: "Asia/Kolkata"
                starts_at_for_client: "2025-07-23T10:30:00.000+05:30"
                ends_at_for_client: "2025-07-23T10:45:00.000+05:30"
                status: "confirmed"
                cancel_reason: null
                cancelled_by: null
                reschedule_requested: false
                preferred_meeting_spot: "jitsi"
                room_type: "jitsi"
                room_url: "https://jitsi.neetocal.com/meeting-with-jane-of-jane-d12ec"
                room_id: null
                spot_details: "https://jitsi.neetocal.com/meeting-with-jane-of-jane-d12ec"
                created_at: "2025-07-22T06:29:35.963Z"
                updated_at: "2025-07-22T06:31:33.090Z"
                meeting_id: "8a7794e3-3142-4569-9dd7-6411369b5d3f"
                meeting:
                  name: "Product Demo Meeting"
                no_show: false
                meeting_outcome: null
                internal_notes: null
                metadata: {}
                admin_booking_url: "https://jane-bigbinary.neetocal.com/admin/bookings/8sqtzrs"
                client_booking_url: "https://jane-bigbinary.neetocal.com/booking/8sqtzrs"
                form_responses:
                  - field: "Name"
                    value: "John Doe"
                    type: "name"
                    field_code: "name"
                    Name: "John Doe"
                  - field: "Email"
                    value: "john.doe@example.com"
                    type: "email"
                    field_code: "email"
                    Email: "john.doe@example.com"
                  - field: "Guest email(s)"
                    value: []
                    type: "additional_guests"
                    field_code: "guest_email_s"
                    "Guest email(s)": []
                form_responses_as_hash:
                  name: "John Doe"
                  email: "john.doe@example.com"
                  guest_email_s: []
        "400":
          description: Bad Request - Missing/Invalid parameters
        "401":
          description: Unauthorized - Invalid API key
        "404":
          description: Not Found - Booking not found
        "500":
          description: Internal server error
    patch:
      summary: Reschedule a booking
      tags:
        - Bookings
      description: This API allows to reschedule the booking to a different slot.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: booking_sid
          description: Id of booking that you want to reschedule.
          required: true
          schema:
            type: string
            example: "hda6gxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of person making the booking.
                  example: "Eve Smith"
                email:
                  type: string
                  description: Email of person making the booking.
                  example: "eve@example.com"
                slot_date:
                  type: string
                  description: Date on which the booking is to be rescheduled. This should be in "YYYY-MM-DD" format.
                  example: "2025-07-25"
                slot_start_time:
                  type: string
                  description: Start time for the booking. This should be in "HH:MM AM/PM" format.
                  example: "10:30 AM"
                time_zone:
                  type: string
                  description: Time zone of person rescheduling the booking.
                  example: "Asia/Kolkata"
                form_responses:
                  type: object
                  description: Responses for the questions of booking form (optional). The key of the field should be the field code of the question. The field code can be found in scheduling link's Settings -> Questions -> 3 dot menu of the question -> Edit -> Advanced properties. You can specify guest emails using the `guest_email_s` field code.
                  properties:
                    guest_email_s:
                      type: array
                      description: Array of guest emails for the booking. The default field code is "guest_email_s". You can change this by editing the Guest email(s) question, and changing the field code in advanced properties.
                      items:
                        type: string
                  example:
                    {
                      "guest_email_s":
                        ["sam@example.com", "charlie@example.com"],
                      "language": "English",
                    }
                reschedule_reason:
                  type: string
                  description: Reason for rescheduling the booking (optional).
                  example: "I want to change the booking time"
              required:
                - name
                - email
                - slot_date
                - slot_start_time
                - time_zone
      responses:
        "200":
          description: OK - Booking reschedule successful
          content:
            application/json:
              schema:
                $ref: "../schemas/booking.yaml#/components/schemas/booking"
        "400":
          description: Bad Request - Missing/Invalid parameters
        "401":
          description: Unauthorized - Invalid API key
        "500":
          description: Internal server error

  /bookings/{booking_sid}/cancel:
    post:
      summary: Cancel a booking
      tags:
        - Bookings
      description: This API allows to cancel a booking.
      parameters:
        - in: header
          name: X-Api-Key
          description: You can generate an API key from the [NeetoCal API Keys dashboard](https://help.neetocal.com/articles/api-keys).
          required: true
          schema:
            type: string
        - in: path
          name: booking_sid
          description: Id of the booking that you want to cancel.
          required: true
          schema:
            type: string
            example: "hda6gxy"
        - in: query
          name: cancel_reason
          description: Reason for cancelling the booking.
          example: "I am not available"
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK - Booking cancel successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request - Missing/Invalid parameters
        "401":
          description: Unauthorized - Invalid API key
        "500":
          description: Internal server error
